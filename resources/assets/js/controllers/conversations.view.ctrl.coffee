'use strict'

module.exports = [
    '$scope'
    '$stateParams'
    '$www'
    '$state'
    ($scope, $stateParams, $www, $state) ->
        $scope.topicId = $stateParams.topicId
        $scope.newPost = {}
        $scope.filters = showNewPost: false

        $scope.selectPost = (post) ->
            $scope.selectedPost = post
            $scope.postCopy = angular.copy(post)
            return

        $scope.resetNewPost = ->
            if $scope.selectedPost
                $scope.selectedPost.showNewPost = false
            $scope.filters.showNewPost = false
            $scope.selectedPost = undefined
            $scope.postCopy = angular.copy(undefined)
            $scope.newPost = {}
            return

        $scope.loadTopic = ->
            $www.get('/api/topics/' + $scope.topicId).success (data) ->
                if data.error
                    $state.go 'profile.social.list'
                    return
                $scope.topic = data.topic
                return
            return

        $scope.updatePost = ->
            $scope.selectedPost.body = $scope.postCopy.body
            $scope.selectedPost.editMode = false
            $www.put('/api/posts/' + $scope.postCopy.id, body: $scope.postCopy.body).success ->
                $scope.postCopy = undefined
                return
            return

        $scope.createPost = ->
            $www.post('/api/topics/' + $scope.topicId + '/post', $scope.newPost).success (data) ->
                $scope.topic.posts.push data.post
                if $scope.selectedPost
                    $scope.selectedPost.posts = $scope.selectedPost.posts or []
                    $scope.selectedPost.posts.push data.post
                $scope.resetNewPost()
                return
            return

        $scope.deletePost = (postId) ->
            $www.delete('/api/posts/' + postId).success ->
                $scope.topic.posts = _.reject($scope.topic.posts, id: +postId)
                return
            return

        $scope.deleteTopic = (topicId) ->
            $www.delete('/api/topics/' + topicId).success ->
                $state.go 'profile.social.list'
                return
            return

        $scope.likePost = (postId) ->
            $www.post '/api/posts/' + postId + '/like'
            return

        $scope.unlikePost = (postId) ->
            $www.delete '/api/posts/' + postId + '/like'
            return

        $scope.togglePostUserLike = (post) ->
            if post.is_liked then $scope.unlikePost(post.id) else $scope.likePost(post.id)
            post.is_liked = !post.is_liked
            return

        $scope.createTopicView = ->
            $www.post '/api/topics/' + $scope.topicId + '/view'
            return

        $scope.loadUserNotification = ->
            $www.get('/api/topics/' + $scope.topicId + '/users/' + $scope.main.authUser.id + '/notification').success (data) ->
                $scope.watchNotification = data.notification
                return
            return

        $scope.createNotification = ->
            $www.post('/api/topics/' + $scope.topicId + '/users/' + $scope.main.authUser.id + '/notification').success (data) ->
                $scope.watchNotification = data.notification
                return
            return

        $scope.deleteNotification = ->
            $www.delete('/api/topics/' + $scope.topicId + '/users/' + $scope.main.authUser.id + '/notification').success ->
                $scope.watchNotification = false
                return
            return

        $scope.toggleNotification = ->
            if $scope.watchNotification then $scope.deleteNotification() else $scope.createNotification()
            return

        $scope.loadTopic()
        $scope.createTopicView()
        $scope.loadUserNotification()
        return
]

# ---
# generated by js2coffee 2.1.0
